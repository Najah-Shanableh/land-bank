from django.contrib.gis.db import models

class Auction(models.Model):
  pin           = models.FloatField('Property ID number', db_index=True)
  doc           = models.CharField('???', null=True, max_length=16)
  date_doc      = models.DateTimeField('Date documented', null=True)
  date_rec      = models.DateTimeField('Date recorded', null=True)
  reo           = models.NullBooleanField('Entering REO', null=True)
  buyer         = models.CharField('Buyer name', max_length=100, null=True)
  buyer_type    = models.CharField('Buyer type', max_length=100, null=True)
  seller        = models.CharField('Seller name', max_length=100, null=True)
  seller_type   = models.CharField('Seller type', max_length=100, null=True)
  yq_doc        = models.IntegerField('???', null=True)
  yeard         = models.IntegerField('???', null=True)
  apt           = models.CharField('Apartment numer', max_length=10, null=True)
  direction     = models.CharField('Street direction', max_length=2, null=True)
  houseno       = models.CharField('House number', max_length=10, null=True)
  street        = models.CharField('Street name', max_length=50, null=True)
  suffix        = models.CharField('Street suffix', max_length=10, null=True)
  addr_final    = models.CharField('???', max_length=100, null=True)
  city_final    = models.CharField('???', max_length=100, null=True)
  lat_y         = models.FloatField('Latitude', null=True)
  long_x        = models.FloatField('Longitude', null=True)
  tract_fix     = models.FloatField('???', null=True)
  no_tract_info = models.IntegerField('???', null=True)
  ca_num        = models.IntegerField('???', null=True)
  ca_name       = models.CharField('Community area', max_length=100, null=True)
  place         = models.CharField('???', max_length=100, null=True)
  gisdate       = models.CharField('???', max_length=100, null=True)
  ptype         = models.IntegerField('Property type', null=True)
  residential   = models.IntegerField('Residential?', null=True)
  adj_yq        = models.IntegerField('Adjudicated quarter?', null=True)
  adj_yd        = models.IntegerField('Adjudicated day?', null=True)
  loc           = models.PointField(null=True)
  objects       = models.GeoManager()
  def __unicode__(self):
    return unicode(self.pin)
  class Meta:
    app_label = 'landbank_site'


class CashFin(models.Model):
  pin                = models.FloatField('Property ID number', db_index=True)
  doc                = models.CharField('???', null=True, max_length=16)
  date_doc           = models.DateTimeField('Date documented', null=True)
  date_rec           = models.DateTimeField('Date recorded', null=True)
  year               = models.IntegerField('???', null=True)
  amount_prime       = models.FloatField('???', null=True)
  likely_distressed  = models.NullBooleanField('???', null=True)
  likely_cash        = models.NullBooleanField('???', null=True)
  buyer              = models.CharField('???', null=True, max_length=100)
  buyer_type         = models.CharField('???', null=True, max_length=100)
  seller             = models.CharField('???', null=True, max_length=100)
  seller_type        = models.CharField('???', null=True, max_length=100)
  apt                = models.CharField('???', null=True, max_length=100)
  direction          = models.CharField('???', null=True, max_length=100)
  houseno            = models.CharField('???', null=True, max_length=100)
  street             = models.CharField('???', null=True, max_length=100)
  suffix             = models.CharField('???', null=True, max_length=100)
  addr_final         = models.CharField('???', null=True, max_length=100)
  city_final         = models.CharField('???', null=True, max_length=100)
  lat_y              = models.FloatField('???', null=True)
  long_x             = models.FloatField('???', null=True)
  tract_fix          = models.FloatField('???', null=True)
  no_tract_info      = models.IntegerField('???', null=True)
  ca_num             = models.IntegerField('???', null=True)
  ca_name            = models.CharField('???', null=True, max_length=100)
  place              = models.CharField('???', null=True, max_length=100)
  gisdate            = models.CharField('???', null=True, max_length=100)
  ptype              = models.IntegerField('???', null=True)
  residential        = models.IntegerField('???', null=True)
  loc           = models.PointField(null=True)
  objects       = models.GeoManager()
  def __unicode__(self):
    return unicode(self.pin)
  class Meta:
    app_label = 'landbank_site'


class Foreclosure(models.Model):
  pin           = models.FloatField('Property ID number', db_index=True)
  filing_date   = models.DateTimeField('Date filed', null=True)
  case_num1     = models.IntegerField('???', null=True)
  case_num2     = models.CharField('???', null=True, max_length=100)
  case_num3     = models.FloatField('????', null=True)
  defendant_first_name = models.CharField('???', null=True, max_length=100)
  defendant_last_name = models.CharField('???', null=True, max_length=100)
  plantiff      = models.CharField('???', null=True, max_length=100)
  date_doc      = models.DateTimeField('Date documented', null=True)
  date_rec      = models.DateTimeField('Date recorded', null=True)
  yq_doc        = models.IntegerField('???', null=True)
  yeard         = models.IntegerField('???', null=True)
  apt           = models.CharField('Apartment numer', max_length=10, null=True)
  direction     = models.CharField('Street direction', max_length=2, null=True)
  houseno       = models.CharField('House number', max_length=10, null=True)
  street        = models.CharField('Street name', max_length=50, null=True)
  suffix        = models.CharField('Street suffix', max_length=10, null=True)
  addr_final    = models.CharField('???', max_length=100, null=True)
  city_final    = models.CharField('???', max_length=100, null=True)
  lat_y         = models.FloatField('Latitude', null=True)
  long_x        = models.FloatField('Longitude', null=True)
  tract_fix     = models.FloatField('???', null=True)
  no_tract_info = models.IntegerField('???', null=True)
  ca_num        = models.IntegerField('???', null=True)
  ca_name       = models.CharField('Community area', max_length=100, null=True)
  place         = models.CharField('???', max_length=100, null=True)
  gisdate       = models.CharField('???', max_length=100, null=True)
  ptype         = models.IntegerField('Property type', null=True)
  residential   = models.IntegerField('Residential?', null=True)
  adj_yq        = models.IntegerField('Adjudicated quarter?', null=True)
  adj_yd        = models.IntegerField('Adjudicated day?', null=True)
  loc           = models.PointField(null=True)
  objects       = models.GeoManager()
  def __unicode__(self):
    return unicode(self.pin)
  class Meta:
    app_label = 'landbank_site'


class Mortgage(models.Model):
  pin           = models.FloatField('Property ID number', db_index=True)
  doc           = models.CharField('Document ID', null=True, max_length=100)
  mort_amt      = models.FloatField('Mortgage dollar amount', null=True)
  date_doc      = models.DateTimeField('Date documented', null=True)
  date_rec      = models.DateTimeField('Date recorded', null=True)
  borrower1     = models.CharField('Borrower', max_length=100, null=True)
  borrower1_type = models.CharField('Borrower type', max_length=10, null=True) 
  lender1       = models.CharField('Lender', max_length=100, null=True)
  lender1_type  = models.CharField('Type of lender', max_length=10, null=True)
  lender2       = models.CharField('Lender', max_length=100, null=True)
  lender2_type  = models.CharField('Type of lender', max_length=10, null=True)
  yq_doc        = models.IntegerField('???', null=True)
  yeard         = models.IntegerField('???', null=True)
  apt           = models.CharField('Apartment numer', max_length=10, null=True)
  direction     = models.CharField('Street direction', max_length=2, null=True)
  houseno       = models.CharField('House number', max_length=10, null=True)
  street        = models.CharField('Street name', max_length=50, null=True)
  suffix        = models.CharField('Street suffix', max_length=10, null=True)
  addr_final    = models.CharField('???', max_length=100, null=True)
  city_final    = models.CharField('???', max_length=100, null=True)
  lat_y         = models.FloatField('Latitude', null=True)
  long_x        = models.FloatField('Longitude', null=True)
  tract_fix     = models.FloatField('???', null=True)
  no_tract_info = models.IntegerField('???', null=True)
  ca_num        = models.IntegerField('???', null=True)
  ca_name       = models.CharField('Community area', max_length=100, null=True)
  place         = models.CharField('???', max_length=100, null=True)
  gisdate       = models.CharField('???', max_length=100, null=True)
  ptype         = models.IntegerField('Property type', null=True)
  residential   = models.IntegerField('Residential?', null=True)
  adj_yq        = models.IntegerField('Adjudicated quarter?', null=True)
  adj_yd        = models.IntegerField('Adjudicated day?', null=True)
  loc           = models.PointField(null=True)
  objects       = models.GeoManager()
  def __unicode__(self):
    return unicode(self.pin)
  class Meta:
    app_label = 'landbank_site'


class Transaction(models.Model):
  pin           = models.FloatField('Property ID number', db_index=True)
  amount_prime  = models.FloatField('Mortgage amount', null=True) 
  doc		= models.CharField('Document ID', null=True, max_length=100)
  date_doc      = models.DateTimeField('Date documented', null=True)
  date_rec      = models.DateTimeField('Date recorded', null=True)
  buyer		= models.CharField('Buyer', max_length=100, null=True)
  buyer_type	= models.CharField('Buyer type', max_length=10, null=True)
  seller	= models.CharField('Seller', max_length=100, null=True)
  seller_type	= models.CharField('Seller type', max_length=10, null=True)
  non_condo	= models.NullBooleanField('???', null=True) 
  purchase_less_20k = models.NullBooleanField('???', null=True) 
  business_buyer = models.NullBooleanField('???', null=True) 
  yq_doc        = models.IntegerField('???', null=True)
  yeard         = models.IntegerField('???', null=True)
  apt           = models.CharField('Apartment numer', max_length=10, null=True)
  direction     = models.CharField('Street direction', max_length=2, null=True)
  houseno       = models.CharField('House number', max_length=10, null=True)
  street        = models.CharField('Street name', max_length=50, null=True)
  suffix        = models.CharField('Street suffix', max_length=10, null=True)
  addr_final    = models.CharField('???', max_length=100, null=True)
  city_final    = models.CharField('???', max_length=100, null=True)
  lat_y         = models.FloatField('Latitude', null=True)
  long_x        = models.FloatField('Longitude', null=True)
  tract_fix     = models.FloatField('???', null=True)
  no_tract_info = models.IntegerField('???', null=True)
  ca_num        = models.IntegerField('???', null=True)
  ca_name       = models.CharField('Community area', max_length=100, null=True)
  place         = models.CharField('???', max_length=100, null=True)
  gisdate       = models.CharField('???', max_length=100, null=True)
  ptype         = models.IntegerField('Property type', null=True)
  residential   = models.IntegerField('Residential?', null=True)
  adj_yq        = models.IntegerField('Adjudicated quarter?', null=True)
  adj_yd        = models.IntegerField('Adjudicated day?', null=True)
  loc           = models.PointField(null=True)
  objects       = models.GeoManager()
  def __unicode__(self):
    return unicode(self.pin)
  class Meta:
    app_label = 'landbank_site'


class Assessor(models.Model):                                         
  pin                           = models.FloatField('Property ID number', db_index=True)
  houseno                       = models.CharField('', max_length=100, null=True)
  direction                     = models.CharField('', max_length=2, null=True)
  street                        = models.CharField('', max_length=100, null=True)
  year_built                    = models.IntegerField('Year the property was built', null=True)
  attic_desc                    = models.CharField('', max_length=250, null=True)
  basement_desc                 = models.CharField('', max_length=250, null=True)
  class_description             = models.CharField('', max_length=250, null=True)
  current_building_assmt        = models.FloatField('', null=True)
  current_land_assmt            = models.FloatField('', null=True)
  current_total_assmt           = models.FloatField('', null=True)
  ext_desc                      = models.CharField('', max_length=100, null=True)
  garage_desc                   = models.CharField('', max_length=100, null=True)
  sqft_bldg                     = models.FloatField('', null=True)
  sqft_land                     = models.FloatField('', null=True)
  ptype                         = models.CharField('', max_length=100, null=True)
  type_pt_sf                    = models.NullBooleanField('', null=True)
  type_pt_condo                 = models.NullBooleanField('', null=True)
  type_pt_2_4                   = models.NullBooleanField('', null=True)
  type_pt_5                     = models.NullBooleanField('', null=True)
  type_pt_nonres                = models.NullBooleanField('', null=True)
  type_pt_unknown               = models.NullBooleanField('', null=True)
  pt_type1_cat                  = models.IntegerField('???', null=True)
  estim_hunit                   = models.IntegerField('Estimated number of housing units based on sqft', null=True)
  lat_y                         = models.FloatField('Latitude', null=True)
  long_x                        = models.FloatField('Longitude', null=True)
  tract_fix                     = models.FloatField('???', null=True)
  no_tract_info                 = models.IntegerField('???', null=True)
  ca_num                        = models.IntegerField('???', null=True)
  ca_name                       = models.CharField('Community area', max_length=100, null=True)
  place                         = models.CharField('???', max_length=100, null=True)
  ward                          = models.IntegerField('Ward number, if available', null=True)
  chicago_flag                  = models.NullBooleanField('', null=True)
  gisdate                       = models.CharField('', max_length=100, null=True)
  loc                           = models.PointField(null=True)
  objects                       = models.GeoManager()
  def __unicode__(self):
    return unicode(self.pin)
  class Meta:
    app_label = 'landbank_site'

